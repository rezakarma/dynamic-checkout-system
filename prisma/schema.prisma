// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  // directUrl = env("DATABASE_URL_UNPOOLED")
}

model User {
  id            String    @id
  email         String    @unique
  role          Role      @default(USER)
  userName      String    @unique
  password_hash String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  sessions      Session[]
  Order         Order[]
  Cart          Cart?
}

enum Role {
  ADMIN
  USER
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime

  user User @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Product {
  id            String          @id @default(cuid())
  name          String
  brand         String
  purchasePrice Int
  sellPrice     Int
  quantity      Int
  SKU           String
  pricingRules  PricingRule[]
  description   String?
  imageLink     String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  orderProduct  orderProduct[]
  ProductInCart ProductInCart[]
}

model PricingRule {
  id          String          @id @default(cuid())
  name        String
  type        PricingRuleType
  description String?
  quantity    Int?
  price       Int?
  free        Int?
  threshold   Int?
  discount    Int?
  products    Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([type], name: "pricing_rules_type")
}

enum PricingRuleType {
  NforX
  VolumePricing
  PercentageDiscount
}

model CouponCodes {
  id           String         @id @default(cuid())
  code         String         @unique
  type         CouponCodeType
  discountType DiscountType
  startDate    DateTime?
  endDate      DateTime?
  discount     Int
  quantity     Int?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

enum CouponCodeType {
  noExpiry
  expiry
}

enum DiscountType {
  percentage
  fixAmount
}

model Order {
  id           String         @id @default(cuid())
  price        Int
  discountCode String?
  userId       String
  user         User           @relation(fields: [userId], references: [id])
  productsList orderProduct[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

model orderProduct {
  id        String  @id @default(cuid())
  count     Int
  price     Int?
  orderId   String
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  productId String
  product   Product @relation(fields: [productId], references: [id])
}

model Cart {
  id       String          @id @default(cuid())
  userId   String          @unique
  user     User            @relation(fields: [userId], references: [id])
  products ProductInCart[]
}

model ProductInCart {
  id        String  @id @default(cuid())
  cartId    String
  cart      Cart    @relation(fields: [cartId], references: [id], onDelete: Cascade)
  productId String
  product   Product @relation(fields: [productId], references: [id])
  count     Int     @default(1)
}
